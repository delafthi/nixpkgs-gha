name: Update packages
on:
  schedule:
    # Run wednesday and friday at 2 AM UTC
    - cron: "0 2 * * 3,5"
  workflow_dispatch:
    inputs:
      packages:
        description: 'Packages to update (semicolon-separated). Format: "pkg" or "pkg 1.0 2.0". Defaults to PACKAGES var.'
        required: false
        type: string
      skip-if-pr-exists:
        description: Skip if PR exists
        type: boolean
        required: false
        default: true
      nixpkgs-review:
        description: Run nixpkgs-review
        required: false
        type: boolean
        default: true
      trigger-review-gha:
        description: Trigger external nixpkgs-review-gha workflow
        required: false
        type: boolean
        default: false

env:
  # Configurable via repository variables
  PACKAGES: ${{ vars.PACKAGES || '' }}
  SKIP_IF_PR_EXISTS: ${{ vars.SKIP_IF_PR_EXISTS || 'true' }}
  NIXPKGS_REVIEW: ${{ vars.NIXPKGS_REVIEW || 'true' }}
  NIXPKGS_REPO: ${{ vars.NIXPKGS_REPO || 'NixOS/nixpkgs' }}
  NIXPKGS_FORK: ${{ vars.NIXPKGS_FORK || '' }}
  TRIGGER_REVIEW_GHA: ${{ vars.TRIGGER_REVIEW_GHA || 'false' }}
  NIXPKGS_REVIEW_GHA_REPO: ${{ vars.NIXPKGS_REVIEW_GHA_REPO || '' }}

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read

    outputs:
      packages: ${{ steps.parse.outputs.packages }}
      skip-if-pr-exists: ${{ steps.parse.outputs.skip-if-pr-exists }}
      nixpkgs-review: ${{ steps.parse.outputs.nixpkgs-review }}
      nixpkgs-repo: ${{ steps.parse.outputs.nixpkgs-repo }}
      nixpkgs-fork: ${{ steps.parse.outputs.nixpkgs-fork }}
      nixpkgs-review-gha-repo: ${{ steps.parse.outputs.nixpkgs-review-gha-repo }}

    steps:
      - name: Parse packages
        id: parse
        run: |
          packages="${{ inputs.packages || env.PACKAGES }}"

          # Convert to JSON array (handles both full specs and package names)
          matrix=$(echo "$packages" | tr ';' '\n' | jq -R -s -c 'split("\n") | map(select(length > 0))')

          [ "$matrix" == "[]" ] || [ -z "$matrix" ] && {
            echo "::warning::No packages to update"
            matrix='[""]'
          }

          # Set outputs based on trigger type
          [ "${{ github.event_name }}" == "workflow_dispatch" ] && {
            skip_pr="${{ inputs.skip-if-pr-exists }}"
            nixpkgs_review="${{ inputs.nixpkgs-review }}"
            trigger_review_gha="${{ inputs.trigger-review-gha }}"
          } || {
            skip_pr="${SKIP_IF_PR_EXISTS}"
            nixpkgs_review="${NIXPKGS_REVIEW}"
            trigger_review_gha="${TRIGGER_REVIEW_GHA}"
          }

          # Validate NIXPKGS_FORK is set
          if [ -z "${NIXPKGS_FORK}" ]; then
            echo "::error::NIXPKGS_FORK variable is required but not set"
            exit 1
          fi

          # Set nixpkgs-review-gha-repo if trigger is enabled
          review_gha_repo=""
          if [ "$trigger_review_gha" == "true" ]; then
            review_gha_repo="${NIXPKGS_REVIEW_GHA_REPO}"
            if [ -z "$review_gha_repo" ]; then
              echo "::warning::TRIGGER_REVIEW_GHA is enabled but NIXPKGS_REVIEW_GHA_REPO is not set"
            fi
          fi

          echo "packages=$matrix" >> "$GITHUB_OUTPUT"
          echo "skip-if-pr-exists=$skip_pr" >> "$GITHUB_OUTPUT"
          echo "nixpkgs-review=$nixpkgs_review" >> "$GITHUB_OUTPUT"
          echo "nixpkgs-repo=${NIXPKGS_REPO}" >> "$GITHUB_OUTPUT"
          echo "nixpkgs-fork=${NIXPKGS_FORK}" >> "$GITHUB_OUTPUT"
          echo "nixpkgs-review-gha-repo=$review_gha_repo" >> "$GITHUB_OUTPUT"

          echo "::notice::Prepared matrix with $(echo "$matrix" | jq 'length') package(s)"

  update:
    needs: prepare-matrix
    if: ${{ needs.prepare-matrix.outputs.packages != '[""]' }}
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.prepare-matrix.outputs.packages) }}
    uses: ./.github/workflows/update-package.yml
    with:
      update-info: ${{ matrix.package }}
      nixpkgs-repo: ${{ needs.prepare-matrix.outputs.nixpkgs-repo }}
      nixpkgs-fork: ${{ needs.prepare-matrix.outputs.nixpkgs-fork }}
      skip-if-pr-exists: ${{ fromJson(needs.prepare-matrix.outputs.skip-if-pr-exists) }}
      nixpkgs-review: ${{ fromJson(needs.prepare-matrix.outputs.nixpkgs-review) }}
      nixpkgs-review-gha-repo: ${{ needs.prepare-matrix.outputs.nixpkgs-review-gha-repo }}
    secrets: inherit
